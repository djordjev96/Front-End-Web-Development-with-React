{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","alert","this","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderDish","RenderComments","comments","postComment","dishId","cmnts","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","Dishdetail","dishItem","dishComments","CommentForm","state","isModalOpen","toggleModal","handleLogin","setState","rating","outline","isOpen","toggle","innerRef","input","password","value","Header","isNavOpen","toggleNav","event","username","remember","checked","preventDefault","dark","expand","height","witdh","navbar","Footer","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.492156c6.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    )\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    } else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    } else  {\n        return(\n            <FadeTransform in \n                transformProps={{\n                    exitTransform: 'scale(0.5 translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    }\n    \n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n    function RenderMenuItem({dish, onClick}) {\n        return(\n            <Card>\n                <Link to={`/menu/${dish.id}`} >\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n        );\n    }\n    // ovo je isto kao gore samo drugaciji nacin za definisanje funcionalnih komponenti\n    const Menu = (props) => {\n\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <RenderMenuItem dish={dish}/>\n                </div>\n            );\n        });\n\n        if(props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        } else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                </div>\n            );  \n        }\n\n               \n    }\n\n\nexport default Menu;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { Component } from 'react';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nclass Contact extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        alert(\"Current State is: \" + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" \n                                    className=\"form-control\" \n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}    \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" \n                                    className=\"form-control\" \n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}    \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" \n                                    className=\"form-control\" \n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                    }}\n                                    />  \n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}    \n                                    />                                  \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, validEmail\n                                    }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}    \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \n                                            className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size:3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\" >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset:2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n    \n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Row} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport {Link} from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\n\n    function RenderDish({dish}) {\n        if (dish != null) {\n            return(\n                <div className=\"col-12 col-md-5 m-1\">\n                    <FadeTransform in \n                        transformProps={{\n                            exitTransform: 'scale(0.5 translateY(-50%)'\n                        }}>\n                        <Card>\n                            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                            <CardBody>\n                                <CardTitle>{dish.name}</CardTitle>\n                                <CardText>{dish.description}</CardText>\n                            </CardBody>\n                        </Card>\n                    </FadeTransform>\n                </div>\n            )\n        }   \n        else {\n            return(\n                <div></div>\n            );\n        }\n    }\n\n    function RenderComments({comments, postComment, dishId}) {\n        if (comments == null) {\n            return (<div></div>);\n        }\n\n        const cmnts = comments.map(comment => {\n            return (\n                <Fade in>\n                    <li key={comment.id}>\n                        <p>{comment.comment}</p>\n                        <p>-- {comment.author}\n                        &nbsp;\n                        {new Intl.DateTimeFormat('en-US', {\n                            year : 'numeric',\n                            month: 'long',\n                            day: '2-digit'\n                        }).format(new Date(comment.date))}\n                        </p>\n                    </li>\n                </Fade>\n            )\n        });\n\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul className=\"list-unlysted\">\n                    <Stagger in>\n                        {cmnts}\n                    </Stagger>\n                </ul>\n                <CommentForm dishId={dishId} postComment={postComment} />\n            </div>\n        )\n    }\n\n    const Dishdetail = (props) => {\n        if(props.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        } else if (props.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        } else if (props.dish != null) {\n            const dish = props.dish;\n            if (dish == null) {\n                return (<div></div>);\n            }\n    \n            const dishItem = <RenderDish dish={props.dish}/>;\n            const dishComments = <RenderComments comments={props.comments}\n                                    postComment={props.postComment}\n                                    dishId={props.dish.id} />;\n    \n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {dishItem}\n                        {dishComments}\n                    </div>\n                </div>\n            );\n        }\n\n        \n    };\n\nexport default Dishdetail;\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nexport class CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n    \n\n    render() {\n        return(\n            <>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\n                </Button>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                <ModalBody>\n                    <div className=\"col-12 col-md-12\">\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\" >\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>   \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"name\">Your Name</Label>\n                                <Control.text model=\".name\" id=\"name\" name=\"name\" className=\"form-control\" \n                                validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                }} />\n                                <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}    \n                                />\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\">Comment</Label>\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" innerRef={(input) => this.password = input} />\n                            </Row>\n                            <Button type=\"submit\" value=\"sumbmit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </div>\n                </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler, Collapse, NavItem, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" witdh=\"41\" alt=\"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} ></Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input}></Input>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"sumbmit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About us</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderLeader({leader}) {\n    return(\n        <Media tag=\"li\">\n            <Media left middle>\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\n            </Media>\n            <Media body className=\"ml-5\">\n                <Media heading>{leader.name}</Media>\n                <p>{leader.designation}</p>\n                <p>{leader.description}</p>\n            </Media>\n        </Media>\n    );\n}\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <RenderLeader leader={leader} />\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        {leaders}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    const newComment = {\n        dishId, rating, author, comment\n    }\n\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('Post comments', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);});\n};\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n\n}\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n\n// export const postFeedback = (firstName, lastName, telnum, email, agree, contactType, message, id) => (dispatch) => {\n//     const newFeedback = {\n//         firstName, lastName, telnum, email, agree, contactType, message, id\n//     }\n\n//     return fetch(baseUrl + 'feedback', {\n//         method: 'POST',\n//         body: JSON.stringify(newFeedback),\n//         headers: {\n//             'Content-Type': 'application/json'\n//         },\n//         credentials: 'same-origin'\n//     })\n//         .then(response => {\n//             if (response.ok) {\n//                 return response;\n//             }\n//             else {\n//                 var error = new Error('Error ' + response.status + ': ' + response.statusText);\n//                 error.response = response;\n//                 throw error;\n//             }\n//         },\n//         error => {\n//             var errmess = new Error(error.message);\n//             throw errmess;\n//         })\n//         .then(response => response.json())\n//         .then(response => dispatch(addFeedback(response)))\n//         .catch(error => { console.log('Post feedback', error.message);\n//             alert('Your feedback could not be posted\\nError: ' + error.message);});\n// };","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = \"ADD_DISHES\";\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\nexport const ADD_PROMOS = \"ADD_PROMOS\";\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\nexport const ADD_LEADERS = \"ADD_LEADERS\";\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\n\n\n\n\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport Dishdetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport About from './AboutComponent';\nimport { Switch , Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }   \n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => {dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())}\n});\n\nclass Main extends Component {\n\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n\n  render() {\n    const HomePage = () => {\n      return(\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]} \n        dishesLoading={this.props.dishes.isLoading}\n        dishesErrMess={this.props.dishes.errMess}\n        promotion={this.props.promotions.promotions.filter((promotion) => promotion.featured)[0]}\n        promosLoading={this.props.promotions.isLoading}\n        promosErrMess={this.props.promotions.errMess}\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n        leadersLoading={this.props.leaders.isLoading}\n        leadersErrMess={this.props.leaders.errMess}\n        />\n      )\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n        <Dishdetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n            <Switch>\n              <Route path=\"/home\" component={HomePage} />\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n              <Route path=\"/menu/:dishId\" component={DishWithId} /> \n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\n              <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\n              <Redirect to=\"/home\" />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n        isLoading: true, \n        errMess: null,\n        dishes: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n        \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n        isLoading: true, \n        errMess: null,\n        promotions: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload}\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: []}\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n        isLoading: true, \n        errMess: null,\n        leaders: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\n        default:\n            return state;\n        }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n  \nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}